# ===================================== #
# kamon-agent reference configuration   #
# ===================================== #

kamon {
  agent {
    # Enables an instrumentation listener that is informed about events that occur during an instrumentation process and
    # logs the events in console.
    debug-mode = false
    # Enables the kamon agent banner at startup.
    show-banner = true
    # Just a place holder to ensure that the key is always available.
    modules {
      # module-name {
      #     # Name
      #     name = "descriptive-name"
      #     # If the module can be stopped in runtime.
      #     stoppable = true|false
      #     # List of fully qualified name of the implementation of kamon.agent.api.instrumentation.KamonInstrumentation.
      #     instrumentations = []
      #     # Only instruments types that are within the list of patterns. e.g. javax.*
      #     within = []
      # }
    }
    # Listener that allows save the instrumented classes in a folder or jar.
    class-dumper {
      # Enables the class dumper.
      enabled = false
      # Default dir.
      dir = ${user.home}"/kamon-agent/dump"
      # By default build a jar containing all instrumented classes.
      create-jar = true
      # Default jar name.
      jar-name = "instrumented-classes"
    }
    # The circuit breaker takes two parameters into account (heap usage and cpu process percentage after an Old CG) to determine when it should trip.
    circuit-breaker {
      # Enables the circuit breaker.
      enabled = true
      # The default values for these thresholds are percentages
      # percentage of free memory after Old GC
      free-memory-threshold = 20.0
      # percentage of process cpu usage after Old GC
      gc-process-cpu-threshold = 10.0
    }
    # Listener that is subscribed to JMX GC events and gather information after a GC Event.
    gc-listener {
      # If the listener should log GC information afer a Old GC.
      log-after-gc-run = true
    }
  }
}